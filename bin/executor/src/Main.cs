// Generated by Haxe 4.1.5

#pragma warning disable 109, 114, 219, 429, 168, 162
public class EntryPoint__Main {
	public static void Main() {
		global::cs.Boot.init();
		global::Main.main();
	}
}

public class Main : global::haxe.lang.HxObject {
	
	static Main() {
		global::Main.args = global::Sys.args();
	}
	
	
	public Main(global::haxe.lang.EmptyObject empty) {
	}
	
	
	public Main() {
		global::Main.__hx_ctor__Main(this);
	}
	
	
	protected static void __hx_ctor__Main(global::Main __hx_this) {
	}
	
	
	public static global::Array<string> args;
	
	public static void main() {
		if (( global::Main.args.length == 0 )) {
			global::System.Console.WriteLine(((object) ("Usage: cpe <bytecode>") ));
			return;
		}
		else {
			string content = global::sys.io.File.getContent(global::Main.args[0]);
			global::Array<string> strings = global::haxe.lang.StringExt.split(content, ",");
			{
				int _g = 0;
				while (( _g < strings.length )) {
					string h = strings[_g];
					 ++ _g;
					global::haxe.lang.Null<int> @byte = global::Std.parseInt(h);
					global::System.Console.Write((((global::haxe.ds.IntMap<string>) (global::haxe.ds.IntMap<object>.__hx_cast<string>(((global::haxe.ds.IntMap) (((global::haxe.IMap<int, string>) (global::Hex.hexArray) )) ))) ).@get((@byte).@value)).toDynamic());
				}
				
			}
			
		}
		
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public class Hex : global::haxe.lang.HxObject {
	
	static Hex() {
		unchecked{
			object __temp_stmt2 = null;
			{
				global::haxe.ds.IntMap<string> _g = new global::haxe.ds.IntMap<string>();
				{
					string @value = null;
					_g.@set(0, @value);
				}
				
				{
					string value1 = null;
					_g.@set(1, value1);
				}
				
				{
					string value2 = null;
					_g.@set(2, value2);
				}
				
				{
					string value3 = null;
					_g.@set(3, value3);
				}
				
				{
					string value4 = null;
					_g.@set(4, value4);
				}
				
				{
					string value5 = null;
					_g.@set(5, value5);
				}
				
				{
					string value6 = null;
					_g.@set(6, value6);
				}
				
				{
					string value7 = null;
					_g.@set(7, value7);
				}
				
				{
					string value8 = null;
					_g.@set(8, value8);
				}
				
				{
					string value9 = null;
					_g.@set(9, value9);
				}
				
				{
					string value10 = null;
					_g.@set(10, value10);
				}
				
				{
					string value11 = null;
					_g.@set(11, value11);
				}
				
				{
					string value12 = null;
					_g.@set(12, value12);
				}
				
				_g.@set(13, "\n");
				{
					string value13 = null;
					_g.@set(14, value13);
				}
				
				{
					string value14 = null;
					_g.@set(15, value14);
				}
				
				{
					string value15 = null;
					_g.@set(16, value15);
				}
				
				{
					string value16 = null;
					_g.@set(17, value16);
				}
				
				{
					string value17 = null;
					_g.@set(18, value17);
				}
				
				{
					string value18 = null;
					_g.@set(19, value18);
				}
				
				{
					string value19 = null;
					_g.@set(20, value19);
				}
				
				{
					string value20 = null;
					_g.@set(21, value20);
				}
				
				{
					string value21 = null;
					_g.@set(22, value21);
				}
				
				{
					string value22 = null;
					_g.@set(23, value22);
				}
				
				{
					string value23 = null;
					_g.@set(24, value23);
				}
				
				{
					string value24 = null;
					_g.@set(25, value24);
				}
				
				{
					string value25 = null;
					_g.@set(26, value25);
				}
				
				{
					string value26 = null;
					_g.@set(27, value26);
				}
				
				{
					string value27 = null;
					_g.@set(28, value27);
				}
				
				{
					string value28 = null;
					_g.@set(29, value28);
				}
				
				{
					string value29 = null;
					_g.@set(30, value29);
				}
				
				{
					string value30 = null;
					_g.@set(31, value30);
				}
				
				_g.@set(32, " ");
				_g.@set(33, "!");
				_g.@set(34, "\"");
				_g.@set(35, "#");
				_g.@set(36, "$");
				_g.@set(37, "%");
				_g.@set(38, "&");
				_g.@set(39, "\'");
				_g.@set(40, "(");
				_g.@set(41, ")");
				_g.@set(42, "*");
				_g.@set(43, "+");
				_g.@set(44, ",");
				_g.@set(45, "-");
				_g.@set(46, ".");
				_g.@set(47, "/");
				_g.@set(48, "0");
				_g.@set(49, "1");
				_g.@set(50, "2");
				_g.@set(51, "3");
				_g.@set(52, "4");
				_g.@set(53, "5");
				_g.@set(54, "6");
				_g.@set(55, "7");
				_g.@set(56, "8");
				_g.@set(57, "9");
				_g.@set(58, ":");
				_g.@set(59, ";");
				_g.@set(60, "<");
				_g.@set(61, "=");
				_g.@set(62, ">");
				_g.@set(63, "?");
				_g.@set(64, "@");
				_g.@set(65, "A");
				_g.@set(66, "B");
				_g.@set(67, "C");
				_g.@set(68, "D");
				_g.@set(69, "E");
				_g.@set(70, "F");
				_g.@set(71, "G");
				_g.@set(72, "H");
				_g.@set(73, "I");
				_g.@set(74, "J");
				_g.@set(75, "K");
				_g.@set(76, "L");
				_g.@set(77, "M");
				_g.@set(78, "N");
				_g.@set(79, "O");
				_g.@set(80, "P");
				_g.@set(81, "Q");
				_g.@set(82, "R");
				_g.@set(83, "S");
				_g.@set(84, "T");
				_g.@set(85, "U");
				_g.@set(86, "V");
				_g.@set(87, "W");
				_g.@set(88, "X");
				_g.@set(89, "Y");
				_g.@set(90, "Z");
				_g.@set(91, "[");
				_g.@set(92, "\\");
				_g.@set(93, "]");
				_g.@set(94, "^");
				_g.@set(95, "_");
				_g.@set(96, "`");
				_g.@set(97, "a");
				_g.@set(98, "b");
				_g.@set(99, "c");
				_g.@set(100, "d");
				_g.@set(101, "e");
				_g.@set(102, "f");
				_g.@set(103, "g");
				_g.@set(104, "h");
				_g.@set(105, "i");
				_g.@set(106, "j");
				_g.@set(107, "k");
				_g.@set(108, "l");
				_g.@set(109, "m");
				_g.@set(110, "n");
				_g.@set(111, "o");
				_g.@set(112, "p");
				_g.@set(113, "q");
				_g.@set(114, "r");
				_g.@set(115, "s");
				_g.@set(116, "t");
				_g.@set(117, "u");
				_g.@set(118, "v");
				_g.@set(119, "w");
				_g.@set(120, "x");
				_g.@set(121, "y");
				_g.@set(122, "z");
				_g.@set(123, "{");
				_g.@set(124, "|");
				_g.@set(125, "}");
				_g.@set(126, "~");
				{
					string value31 = null;
					_g.@set(127, value31);
				}
				
				__temp_stmt2 = _g;
			}
			
			object __temp_stmt1 = global::haxe.ds.IntMap<object>.__hx_cast<string>(((global::haxe.ds.IntMap) (__temp_stmt2) ));
			global::Hex.hexArray = ((global::haxe.ds.IntMap<string>) (__temp_stmt1) );
		}
	}
	
	
	public Hex(global::haxe.lang.EmptyObject empty) {
	}
	
	
	public Hex() {
		global::Hex.__hx_ctor__Hex(this);
	}
	
	
	protected static void __hx_ctor__Hex(global::Hex __hx_this) {
	}
	
	
	public static global::haxe.ds.IntMap<string> hexArray;
	
}


